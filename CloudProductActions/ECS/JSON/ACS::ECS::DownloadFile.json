{
  "FormatVersion": "OOS-2019-06-01",
  "Description": {
    "name-en": "ACS::ECS::DownloadFile",
    "name-zh-cn": "到ECS实例中下载文件",
    "en": "Download the file to the ECS instance",
    "zh-cn": "到ECS实例中下载文件"
  },
  "Parameters": {
    "regionId": {
      "Description": {
        "en": "The ID of region",
        "zh-cn": "地域ID"
      },
      "Type": "String",
      "Default": "{{ ACS::RegionId }}"
    },
    "instanceId": {
      "Description": {
        "en": "The ID of ECS instace",
        "zh-cn": "ECS实例ID"
      },
      "Type": "String"
    },
    "sourceType": {
      "Description": {
        "en": "The type of file storage",
        "zh-cn": "文件存储方式"
      },
      "Type": "String",
      "AllowedValues": [
        "oss",
        "https",
        "local"
      ]
    },
    "sourcePath": {
      "Description": {
        "en": "You must specify a URL where the file is stored",
        "zh-cn": "您必须指定一个用于存储文件的URL"
      },
      "Type": "String"
    },
    "tokenInfo": {
      "Description": {
        "en": "Specify a token to download file.It is only required when downloading file from GitHub",
        "zh-cn": "指定一个token来下载文件，只有从GitHub下载文件时会用到"
      },
      "Type": "String",
      "Default": ""
    },
    "destinationDir": {
      "Description": {
        "en": "Target directory for file download in instance",
        "zh-cn": "文件在实例中的下载目录"
      },
      "Type": "String"
    }
  },
  "Tasks": [
    {
      "Name": "queryInstanceOSType",
      "Action": "ACS::ExecuteApi",
      "Description": {
        "en": "Queries ECS instance OS type",
        "zh-cn": "获取实例操作系统类型"
      },
      "Properties": {
        "Service": "ECS",
        "API": "DescribeInstances",
        "Parameters": {
          "RegionId": "{{ regionId }}",
          "InstanceIds": [
            "{{ instanceId }}"
          ]
        }
      },
      "Outputs": {
        "OSType": {
          "Type": "String",
          "ValueSelector": "Instances.Instance[].OSType"
        }
      }
    },
    {
      "Name": "downloadLinuxFile",
      "When": {
        "Fn::Equals": [
          "{{ queryInstanceOSType.OSType }}",
          "linux"
        ]
      },
      "Action": "ACS::ECS::RunCommand",
      "Description": {
        "en": "Execute download file command on linux instance",
        "zh-cn": "在linux类型实例上执行下载文件命令"
      },
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "commandType": "RunShellScript",
        "commandContent": "#/bin/bash\nif [ {{sourceType}} = 'local' ]; then\n  filePath=$(echo \"{{sourcePath}}\" | awk -F'?' '{print$1}')\n  fileName=$(echo $filePath | awk -F'/' '{print$5}')\n  wget \"{{sourcePath}}\" -O {{destinationDir}}/$fileName -q\n  echo \"{{destinationDir}}/$fileName Execute Success\"\nelse\n  current_version=`aliyun-service -v`\n  specified_version=1.0.2.497\n\n  if [[ $current_version > $specified_version ]]; then\n    acs-plugin-manager --exec -P oosutil --params  download_content,{{sourceType}},'\"{{sourcePath}}\"',\\''{{ tokenInfo }}'\\','{{destinationDir}}'\n  else\n    version='{{ ACS::OOSUtilVersion }}'\n    path=/usr/local/share/aliyun-oosutil/$version\n    currentPath=`pwd`\n    test -e $path || mkdir -p $path\n    cd $path && test -e oosutil_linux || wget -q \"https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/oosutil/$version/linux/oosutil_linux\"\n    chmod +x oosutil_linux\n    cd $currentPath\n    $path/oosutil_linux download_content {{ sourceType }} \"{{ sourcePath }}\" \\''{{ tokenInfo }}'\\' {{destinationDir}}\n  fi\nfi"
      },
      "Outputs": {
        "commandOutput": {
          "Type": "String",
          "ValueSelector": "invocationOutput"
        }
      }
    },
    {
      "Name": "downloadWindowsFile",
      "When": {
        "Fn::Equals": [
          "{{ queryInstanceOSType.OSType }}",
          "windows"
        ]
      },
      "Action": "ACS::ECS::RunCommand",
      "Description": {
        "en": "Executes download file command on windows instance",
        "zh-cn": "在windows类型实例上执行下载文件命令"
      },
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "commandType": "RunPowerShellScript",
        "commandContent": "$sourcePath = \"{{ sourcePath }}\"\nif (\"{{ sourceType }}\" -eq \"local\"){\n  $destinationDir = \"{{ destinationDir }}\"\n  $httpFilePath = $sourcePath.Split(\"?\")[0]\n  $fileName = $httpFilePath.Split(\"/\")[4]\n  $client = new-object System.Net.WebClient\n  $client.DownloadFile($sourcePath, \"$destinationDir/$fileName\")\n  echo \"{{destinationDir}}/$fileName Execute Success\"\n}else{\n  $current_version=(aliyun_assist_service.exe -v)\n  $specified_version=\"1.0.0.134\"\n  if ($current_version -gt $specified_version){\n    acs-plugin-manager.exe --exec -P oosutil_win --params \"download_content,{{ sourceType }},$sourcePath,'`{{ tokenInfo }}`',{{destinationDir}}\"\n    if ($LASTEXITCODE -ne 0){\n      exit $LASTEXITCODE;\n    }\n  }else{\n    $version=\"{{ACS::OOSUtilVersion}}\"\n    $path = \"C:\\aliyun-oosutil\\$version\"\n    $currentPath=(pwd)\n    $pathExistOrNot = Test-Path -Path \"$path\"\n    if ($pathExistOrNot){\n        cd $path\n    }else{\n        mkdir $path\n        cd $path\n    }\n    $client = new-object System.Net.WebClient\n    $client.DownloadFile(\"https://oos-public-{{ACS::RegionId}}.oss-{{ACS::RegionId}}-internal.aliyuncs.com/oosutil/$version/windows/oosutil_windows.exe\", \"$path/oosutil_windows.exe\")\n    cd $currentPath\n    C:\\aliyun-oosutil\\{{ ACS::OOSUtilVersion }}\\oosutil_windows.exe download_content {{ sourceType }} $sourcePath '`{{ tokenInfo }}`' {{destinationDir}}\n    if ($LASTEXITCODE -ne 0){\n      exit $LASTEXITCODE;\n    }\n  }\n}"
      },
      "Outputs": {
        "commandOutput": {
          "Type": "String",
          "ValueSelector": "invocationOutput"
        }
      }
    }
  ],
  "Outputs": {
    "commandOutput": {
      "Type": "String",
      "Value": {
        "Fn::If": [
          {
            "Fn::Equals": [
              "linux",
              "{{ queryInstanceOSType.OSType }}"
            ]
          },
          "{{ downloadLinuxFile.commandOutput }}",
          "{{ downloadWindowsFile.commandOutput }}"
        ]
      }
    }
  }
}