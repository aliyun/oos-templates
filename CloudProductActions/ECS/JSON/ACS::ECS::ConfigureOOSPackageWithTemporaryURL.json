{
  "FormatVersion": "OOS-2019-06-01",
  "Description": {
    "name-en": "ACS::ECS::ConfigureOOSPackageWithTemporaryURL",
    "name-zh-cn": "在ECS实例中通过生成临时地址安装OOS自定义软件包",
    "en": "Configure OOS package on ECS instance",
    "zh-cn": "在ECS实例中安装OOS自定义软件包"
  },
  "Parameters": {
    "regionId": {
      "Description": {
        "en": "The ID of region",
        "zh-cn": "地域ID"
      },
      "Type": "String",
      "AssociationProperty": "RegionId",
      "Default": "{{ ACS::RegionId }}"
    },
    "instanceId": {
      "Description": {
        "en": "The ID of ECS instance",
        "zh-cn": "ECS实例ID"
      },
      "Type": "String"
    },
    "action": {
      "Description": {
        "en": "The action to configure package",
        "zh-cn": "设置软件包的方式"
      },
      "Type": "String",
      "AllowedValues": [
        "install",
        "uninstall"
      ],
      "Default": "install"
    },
    "packageName": {
      "Description": {
        "en": "The name of package",
        "zh-cn": "软件包名称"
      },
      "Type": "String"
    },
    "packageVersion": {
      "Description": {
        "en": "The version of package",
        "zh-cn": "软件包版本"
      },
      "Type": "String",
      "Default": ""
    },
    "parameters": {
      "Label": {
        "en": "Parameters",
        "zh-cn": "命令中的参数"
      },
      "Type": "Json",
      "Default": {}
    }
  },
  "Tasks": [
    {
      "Name": "waitForEcsRunning",
      "Action": "ACS::WaitFor",
      "Description": {
        "en": "Waits for the ECS instance to enter running status",
        "zh-cn": "等待实例运行"
      },
      "MaxRetryInterval": 180,
      "Properties": {
        "Service": "ECS",
        "API": "DescribeInstances",
        "Parameters": {
          "RegionId": "{{ regionId }}",
          "InstanceIds": [
            "{{ instanceId }}"
          ]
        },
        "DesiredValues": [
          "Running"
        ],
        "PropertySelector": "Instances.Instance[].Status"
      },
      "Outputs": {
        "startTime": {
          "Type": "String",
          "ValueSelector": "Instances.Instance[].StartTime"
        },
        "osType": {
          "Type": "String",
          "ValueSelector": "Instances.Instance[].OSType"
        },
        "instanceTypeFamily": {
          "Type": "String",
          "ValueSelector": "Instances.Instance[].InstanceTypeFamily"
        }
      }
    },
    {
      "Name": "sleepForWindows",
      "Description": {
        "en": "Windows specific instance type wait for restart",
        "zh-cn": "Windows实例类型等待重启"
      },
      "When": {
        "Fn::Equals": [
          "{{ waitForEcsRunning.osType }}",
          "windows"
        ]
      },
      "Action": "ACS::Sleep",
      "Properties": {
        "Duration": "4m"
      }
    },
    {
      "Name": "waitForCloudAssistantHeartbeatNormal",
      "Action": "ACS::WaitFor",
      "Description": {
        "en": "Waits for the cloud assistant's heartbeat to be normal",
        "zh-cn": "等待云助手心跳正常"
      },
      "DelayType": "Constant",
      "Delay": 60,
      "Retries": 30,
      "Properties": {
        "Service": "ECS",
        "API": "DescribeCloudAssistantStatus",
        "Parameters": {
          "RegionId": "{{ regionId }}",
          "InstanceId": [
            "{{ instanceId }}"
          ]
        },
        "DesiredValues": [
          true
        ],
        "PropertySelector": ".InstanceCloudAssistantStatusSet.InstanceCloudAssistantStatus[].LastHeartbeatTime > \"{{waitForEcsRunning.startTime}}\""
      }
    },
    {
      "Name": "checkUserDataReady",
      "Description": {
        "en": "Check if user-data is ready",
        "zh-cn": "查看用户数据是否准备"
      },
      "When": {
        "Fn::Equals": [
          "{{ waitForEcsRunning.osType }}",
          "linux"
        ]
      },
      "Action": "ACS::ECS::RunCommand",
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "commandType": "RunShellScript",
        "commandContent": "#!/bin/bash\nwhich cloud-init >/dev/null 2>/dev/null\nif [ $? -eq 0 ]; then\n  version=$(cloud-init --version | awk '{print $2}')\n  threshold=\"17.2\"\n  if [[ $version < $threshold ]]; then\n    echo \"cloud-init version is too low, please upgrade to version $threshold or later.\"\n  else\n    cloud-init status --wait\n  fi\nelse\n  echo \"cloud-init not installed.\"\nfi",
        "timeout": 1800
      },
      "Outputs": {
        "commandOutput": {
          "Type": "Json",
          "ValueSelector": "invocationOutput"
        }
      }
    },
    {
      "Name": "FetchEcsInfoLinux",
      "Description": {
        "en": "Fetch architect and platform with os Linux",
        "zh-cn": "查询ecs的平台和架构"
      },
      "When": {
        "Fn::Equals": [
          "{{ waitForEcsRunning.osType }}",
          "linux"
        ]
      },
      "Action": "ACS::ECS::RunCommand",
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "commandType": "RunShellScript",
        "commandContent": "#!/bin/bash\ncurrent_version=`aliyun-service -v`\nspecified_version=1.0.2.497\n\nif [[ $current_version > $specified_version ]]; then\n  acs-plugin-manager --exec -P oosutil --params get_ecs_info\nelse\n  version='{{ ACS::OOSUtilVersion }}'\n  path=/usr/local/share/aliyun-oosutil/$version\n  test -e $path || mkdir -p $path\n  currentPath=`pwd`\n  cd $path && test -e oosutil_linux || wget -q \"https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/oosutil/$version/linux/oosutil_linux\"\n  chmod +x oosutil_linux\n  cd $currentPath\n  $path/oosutil_linux get_ecs_info\nfi"
      },
      "Outputs": {
        "commandOutput": {
          "Type": "Json",
          "ValueSelector": "invocationOutput"
        }
      }
    },
    {
      "Name": "FetchEcsInfoWindows",
      "Description": {
        "en": "Fetch architect and platform with os windows",
        "zh-cn": "查询ecs的平台和架构"
      },
      "When": {
        "Fn::Equals": [
          "{{ waitForEcsRunning.osType }}",
          "windows"
        ]
      },
      "Action": "ACS::ECS::RunCommand",
      "Properties": {
        "regionId": "{{ regionId }}",
        "instanceId": "{{ instanceId }}",
        "commandType": "RunPowerShellScript",
        "commandContent": "$current_version=(aliyun_assist_service.exe -v)\n$specified_version=\"1.0.0.134\"\nif ($current_version -gt $specified_version){\n  acs-plugin-manager.exe --exec -P oosutil_win --params \"get_ecs_info\"\n}else{\n  $version=\"{{ACS::OOSUtilVersion}}\"\n  $path = \"C:\\aliyun-oosutil\\$version\"\n  $currentPath=(pwd)\n  $pathExistOrNot = Test-Path -Path \"$path\"\n  if ($pathExistOrNot){\n      cd $path\n  }else{\n      mkdir $path\n      cd $path\n  }\n  $client = new-object System.Net.WebClient\n  $client.DownloadFile(\"https://oos-public-{{ACS::RegionId}}.oss-{{ACS::RegionId}}-internal.aliyuncs.com/oosutil/$version/windows/oosutil_windows.exe\", \"$path/oosutil_windows.exe\")\n  cd $currentPath\n  C:\\aliyun-oosutil\\{{ ACS::OOSUtilVersion }}\\oosutil_windows.exe get_ecs_info\n}"
      },
      "Outputs": {
        "commandOutput": {
          "Type": "Json",
          "ValueSelector": "invocationOutput"
        }
      }
    },
    {
      "Name": "queryTemplate",
      "Action": "ACS::ExecuteApi",
      "Description": {
        "en": "Queries software info",
        "zh-cn": "获取软件包信息"
      },
      "Properties": {
        "Service": "OOS",
        "API": "GetTemplate",
        "Parameters": {
          "RegionId": "{{ regionId }}",
          "TemplateName": "{{ packageName }}",
          "TemplateVersion": {
            "Fn::If": [
              {
                "Fn::Equals": [
                  "",
                  "{{ packageVersion }}"
                ]
              },
              null,
              "{{ packageVersion }}"
            ]
          }
        }
      },
      "Outputs": {
        "TemplateContent": {
          "Type": "String",
          "ValueSelector": ".Content"
        }
      }
    },
    {
      "Name": "downloadAndRun",
      "Action": "ACS::ECS::DownloadOSSFileAndRunCommand",
      "Description": {
        "en": "downloadAndRun",
        "zh-cn": "下载软件包并运行脚本"
      },
      "OnError": "DeletePackage",
      "Properties": {
        "regionId": "{{ regionId }}",
        "instanceId": "{{ instanceId }}",
        "parameters": {
          "Fn::If": [
            {
              "Fn::ContainsSubString": [
                {
                  "Fn::If": [
                    {
                      "Fn::Equals": [
                        "{{ waitForEcsRunning.osType }}",
                        "linux"
                      ]
                    },
                    {
                      "Fn::If": [
                        {
                          "Fn::Equals": [
                            "{{ action }}",
                            "install"
                          ]
                        },
                        {
                          "Fn::Select": [
                            "InstallScript",
                            {
                              "Fn::FindMatchedPackage": [
                                "{{ queryTemplate.TemplateContent }}",
                                "{{ FetchEcsInfoLinux.commandOutput }}"
                              ]
                            }
                          ]
                        },
                        {
                          "Fn::Select": [
                            "UninstallScript",
                            {
                              "Fn::FindMatchedPackage": [
                                "{{ queryTemplate.TemplateContent }}",
                                "{{ FetchEcsInfoLinux.commandOutput }}"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Fn::If": [
                        {
                          "Fn::Equals": [
                            "{{ action }}",
                            "install"
                          ]
                        },
                        {
                          "Fn::Select": [
                            "InstallScript",
                            {
                              "Fn::FindMatchedPackage": [
                                "{{ queryTemplate.TemplateContent }}",
                                "{{ FetchEcsInfoWindows.commandOutput }}"
                              ]
                            }
                          ]
                        },
                        {
                          "Fn::Select": [
                            "UninstallScript",
                            {
                              "Fn::FindMatchedPackage": [
                                "{{ queryTemplate.TemplateContent }}",
                                "{{ FetchEcsInfoWindows.commandOutput }}"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "{{"
              ]
            },
            "{{ parameters }}",
            {}
          ]
        },
        "timeout": 7200,
        "bucketName": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            {
              "Fn::Select": [
                "BucketName",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoLinux.commandOutput }}"
                  ]
                }
              ]
            },
            {
              "Fn::Select": [
                "BucketName",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoWindows.commandOutput }}"
                  ]
                }
              ]
            }
          ]
        },
        "objectName": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            {
              "Fn::Select": [
                "ObjectName",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoLinux.commandOutput }}"
                  ]
                }
              ]
            },
            {
              "Fn::Select": [
                "ObjectName",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoWindows.commandOutput }}"
                  ]
                }
              ]
            }
          ]
        },
        "OSSRegion": "{{ regionId }}",
        "whetherSaveToFile": false,
        "destinationDir": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "/root/workspace/{{ACS::ExecutionId}}",
            "C:\\\\Windows\\\\System32\\\\Workspace\\\\{{ACS::ExecutionId}}"
          ]
        },
        "workingDir": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "/root/workspace/{{ACS::ExecutionId}}",
            "C:\\\\Windows\\\\System32\\\\Workspace\\\\{{ACS::ExecutionId}}"
          ]
        },
        "commandContent": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            {
              "Fn::If": [
                {
                  "Fn::Equals": [
                    "{{ action }}",
                    "install"
                  ]
                },
                {
                  "Fn::Select": [
                    "InstallScript",
                    {
                      "Fn::FindMatchedPackage": [
                        "{{ queryTemplate.TemplateContent }}",
                        "{{ FetchEcsInfoLinux.commandOutput }}"
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    "UninstallScript",
                    {
                      "Fn::FindMatchedPackage": [
                        "{{ queryTemplate.TemplateContent }}",
                        "{{ FetchEcsInfoLinux.commandOutput }}"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Fn::If": [
                {
                  "Fn::Equals": [
                    "{{ action }}",
                    "install"
                  ]
                },
                {
                  "Fn::Select": [
                    "InstallScript",
                    {
                      "Fn::FindMatchedPackage": [
                        "{{ queryTemplate.TemplateContent }}",
                        "{{ FetchEcsInfoWindows.commandOutput }}"
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    "UninstallScript",
                    {
                      "Fn::FindMatchedPackage": [
                        "{{ queryTemplate.TemplateContent }}",
                        "{{ FetchEcsInfoWindows.commandOutput }}"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "Outputs": {
        "downloadFileCommandOutput": {
          "Type": "String",
          "ValueSelector": "downloadFileCommandOutput"
        },
        "runCommandOutput": {
          "Type": "String",
          "ValueSelector": "runCommandOutput"
        }
      }
    },
    {
      "Name": "UpdateInstancePackageState",
      "Action": "ACS::ExecuteApi",
      "Description": {
        "en": "Update Instance Package State",
        "zh-cn": "更新实例软件包状态"
      },
      "Properties": {
        "Service": "OOS",
        "API": "UpdateInstancePackageState",
        "Parameters": {
          "RegionId": "{{ regionId }}",
          "TemplateName": "{{ packageName }}",
          "TemplateVersion": {
            "Fn::If": [
              {
                "Fn::Equals": [
                  "",
                  "{{ packageVersion }}"
                ]
              },
              null,
              "{{ packageVersion }}"
            ]
          },
          "InstanceId": "{{ instanceId }}",
          "Parameters": "{{ parameters }}",
          "ConfigureAction": {
            "Fn::If": [
              {
                "Fn::Equals": [
                  "{{ action }}",
                  "install"
                ]
              },
              "Install",
              "UnInstall"
            ]
          }
        }
      }
    },
    {
      "Name": "executeOutputScript",
      "Action": "ACS::ECS::RunCommand",
      "Description": {
        "en": "Execute Output Script",
        "zh-cn": "执行输出配置脚本"
      },
      "When": {
        "Fn::And": [
          {
            "Fn::Not": {
              "Fn::Equals": [
                {
                  "Fn::If": [
                    {
                      "Fn::Equals": [
                        "{{ waitForEcsRunning.osType }}",
                        "linux"
                      ]
                    },
                    {
                      "Fn::Select": [
                        "OutputScript",
                        {
                          "Fn::FindMatchedPackage": [
                            "{{ queryTemplate.TemplateContent }}",
                            "{{ FetchEcsInfoLinux.commandOutput }}"
                          ]
                        }
                      ]
                    },
                    {
                      "Fn::Select": [
                        "OutputScript",
                        {
                          "Fn::FindMatchedPackage": [
                            "{{ queryTemplate.TemplateContent }}",
                            "{{ FetchEcsInfoWindows.commandOutput }}"
                          ]
                        }
                      ]
                    }
                  ]
                },
                ""
              ]
            }
          },
          {
            "Fn::Equals": [
              "{{ action }}",
              "install"
            ]
          }
        ]
      },
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "workingDir": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "/root/workspace/{{ACS::ExecutionId}}",
            "C:\\\\Windows\\\\System32\\\\Workspace\\\\{{ACS::ExecutionId}}"
          ]
        },
        "commandType": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "RunShellScript",
            "RunPowerShellScript"
          ]
        },
        "commandContent": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            {
              "Fn::Select": [
                "OutputScript",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoLinux.commandOutput }}"
                  ]
                }
              ]
            },
            {
              "Fn::Select": [
                "OutputScript",
                {
                  "Fn::FindMatchedPackage": [
                    "{{ queryTemplate.TemplateContent }}",
                    "{{ FetchEcsInfoWindows.commandOutput }}"
                  ]
                }
              ]
            }
          ]
        }
      },
      "Outputs": {
        "configurationOutput": {
          "Type": "String",
          "ValueSelector": "invocationOutput"
        }
      }
    },
    {
      "Name": "DeletePackage",
      "Action": "ACS::ECS::RunCommand",
      "Description": {
        "en": "Delete Package on instance",
        "zh-cn": "删除软件包"
      },
      "Properties": {
        "instanceId": "{{ instanceId }}",
        "regionId": "{{ regionId }}",
        "commandType": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "RunShellScript",
            "RunPowerShellScript"
          ]
        },
        "commandContent": {
          "Fn::If": [
            {
              "Fn::Equals": [
                "{{ waitForEcsRunning.osType }}",
                "linux"
              ]
            },
            "if [ -d /root/workspace/{{ACS::ExecutionId}} ]; then\nrm -rf /root/workspace/{{ACS::ExecutionId}}\nfi",
            "$dir = \"C:\\\\Windows\\\\System32\\\\Workspace\\\\{{ACS::ExecutionId}}\"\nif (Test-Path $dir -PathType Container) {\nRemove-Item -Recurse -Force $dir\n}"
          ]
        }
      },
      "Outputs": {
        "commandOutput": {
          "Type": "String",
          "ValueSelector": "invocationOutput"
        }
      }
    }
  ],
  "Outputs": {
    "commandOutput": {
      "Type": "String",
      "Value": "{{ downloadAndRun.runCommandOutput }}"
    },
    "configurationOutput": {
      "Type": "String",
      "Value": "{{ executeOutputScript.configurationOutput }}"
    }
  }
}