FormatVersion: OOS-2019-06-01
Description:
  name-en: ACS::ECS::ConfigureOOSPackage
  name-zh-cn: 在ECS实例中安装OOS自定义软件包
  en: Configure OOS package on ECS instance
  zh-cn: 在ECS实例中安装OOS自定义软件包
Parameters:
  regionId:
    Description:
      en: The ID of region
      zh-cn: 地域ID
    Type: String
    Default: '{{ ACS::RegionId }}'
  instanceId:
    Description:
      en: The ID of ECS instance
      zh-cn: ECS实例ID
    Type: String
  action:
    Description:
      en: The action to configure package
      zh-cn: 设置软件包的方式
    Type: String
    AllowedValues:
      - install
      - uninstall
    Default: install
  packageName:
    Description:
      en: The name of package
      zh-cn: 软件包名称
    Type: String
  packageVersion:
    Description:
      en: The version of package
      zh-cn: 软件包版本
    Type: String
    Default: ''
Tasks:
  - Name: queryInstanceOSType
    Action: 'ACS::ExecuteApi'
    Description:
      en: Queries ECS instance OS type
      zh-cn: 获取操作系统类型
    Properties:
      Service: ECS
      API: DescribeInstances
      Parameters:
        RegionId: '{{ regionId }}'
        InstanceIds:
          - '{{ instanceId }}'
    Outputs:
      OSType:
        Type: String
        ValueSelector: 'Instances.Instance[].OSType'
  - Name: configureLinuxPackage
    Description:
      en: Configures OOS package on Linux instance
      zh-cn: 在Linux类型实例中安装OOS软件包
    When:
      'Fn::Equals':
        - '{{ queryInstanceOSType.OSType }}'
        - linux
    Action: 'ACS::ECS::RunCommand'
    Properties:
      instanceId: '{{ instanceId }}'
      regionId: '{{ regionId }}'
      commandType: RunShellScript
      commandContent: |-
        #!/bin/bash
        current_version=`aliyun-service -v`
        specified_version=1.0.2.497

        if [[ $current_version > $specified_version ]]; then
          if  [ '{{ packageVersion }}' = '' ] ; then
             acs-plugin-manager --exec -P oosutil --params configure_package,{{action}},{{packageName}}
          else
             acs-plugin-manager --exec -P oosutil --params configure_package,{{action}},{{packageName}},--package-version,{{packageVersion}}
          fi
        else
          version='{{ ACS::OOSUtilVersion }}'
          path=/usr/local/share/aliyun-oosutil/$version
          test -e $path || mkdir -p $path
          currentPath=`pwd`
          cd $path && test -e oosutil_linux || wget -q "https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/oosutil/$version/linux/oosutil_linux"
          chmod +x oosutil_linux
          cd $currentPath
          if  [ '{{ packageVersion }}' = '' ] ; then
            $path/oosutil_linux configure_package {{action}} {{packageName}}
          else
            $path/oosutil_linux configure_package {{action}} {{packageName}} --package-version {{packageVersion}}
          fi
        fi
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
  - Name: configureWindowsPackage
    Description:
      en: Configures OOS package on Windows instance
      zh-cn: 在Windows类型实例中安装OOS软件包
    When:
      'Fn::Equals':
        - '{{ queryInstanceOSType.OSType }}'
        - windows
    Action: 'ACS::ECS::RunCommand'
    Properties:
      regionId: '{{ regionId }}'
      instanceId: '{{ instanceId }}'
      commandType: RunPowerShellScript
      commandContent: |-
        $current_version=(aliyun_assist_service.exe -v)
        $specified_version="1.0.0.134"
        if ($current_version -gt $specified_version){
          if ('{{ packageVersion }}'){
            acs-plugin-manager.exe --exec -P oosutil_win --params "configure_package,{{action}},{{packageName}},--package-version,{{packageVersion}}"
            if ($LASTEXITCODE -ne 0){
                exit $LASTEXITCODE;
            }
          }else{
            acs-plugin-manager.exe --exec -P oosutil_win --params "configure_package,{{action}},{{packageName}}"
            if ($LASTEXITCODE -ne 0){
                exit $LASTEXITCODE;
            }
          }
        }else{
          $version="{{ACS::OOSUtilVersion}}"
          $path = "C:\aliyun-oosutil\$version"
          $currentPath=(pwd)
          $pathExistOrNot = Test-Path -Path "$path"
          if ($pathExistOrNot){
              cd $path
          }else{
              mkdir $path
              cd $path
          }
          $client = new-object System.Net.WebClient
          $client.DownloadFile("https://oos-public-{{ACS::RegionId}}.oss-{{ACS::RegionId}}-internal.aliyuncs.com/oosutil/$version/windows/oosutil_windows.exe", "$path/oosutil_windows.exe")
          cd $currentPath
          if ('{{ packageVersion }}'){
            C:\aliyun-oosutil\{{ ACS::OOSUtilVersion }}\oosutil_windows.exe configure_package {{action}} {{packageName}} --package-version {{ packageVersion }}
            if ($LASTEXITCODE -ne 0){
                exit $LASTEXITCODE;
            }
          }else{
            C:\aliyun-oosutil\{{ ACS::OOSUtilVersion }}\oosutil_windows.exe configure_package {{action}} {{packageName}}
            if ($LASTEXITCODE -ne 0){
                exit $LASTEXITCODE;
            }
          }
        }
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
Outputs:
  commandOutput:
    Type: String
    Value:
      'Fn::If':
        - 'Fn::Equals':
            - linux
            - '{{ queryInstanceOSType.OSType }}'
        - '{{ configureLinuxPackage.commandOutput }}'
        - '{{ configureWindowsPackage.commandOutput }}'
