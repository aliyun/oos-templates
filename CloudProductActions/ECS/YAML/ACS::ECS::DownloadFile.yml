FormatVersion: OOS-2019-06-01
Description:
  name-en: ACS::ECS::DownloadFile
  name-zh-cn: 到ECS实例中下载文件
  en: Download the file to the ECS instance
  zh-cn: 到ECS实例中下载文件
Parameters:
  regionId:
    Description:
      en: The ID of region
      zh-cn: 地域ID
    Type: String
    Default: '{{ ACS::RegionId }}'
  instanceId:
    Description:
      en: The ID of ECS instance
      zh-cn: ECS实例ID
    Type: String
  sourceType:
    Description:
      en: The type of file storage
      zh-cn: 文件存储方式
    Type: String
    AllowedValues:
      - oss
      - https
      - local
  sourcePath:
    Description:
      en: You must specify a URL where the file is stored
      zh-cn: 您必须指定一个用于存储文件的URL
    Type: String
  tokenInfo:
    Description:
      en: Specify a token to download file.It is only required when downloading file from GitHub
      zh-cn: 指定一个token来下载文件，只有从GitHub下载文件时会用到
    Type: String
    Default: ''
  destinationDir:
    Description:
      en: Target directory for file download in instance
      zh-cn: 文件在实例中的下载目录
    Type: String
  timeout:
    Description:
      en: Timeout for file download
      zh-cn: 文件下载超时时间
    Type: Number
    Default: 600
  fileOwner:
    Description:
      en: The owner of the file
      zh-cn: 文件所有者
    Type: String
    Default: ''
  fileGroup:
    Description:
      en: The group of the file
      zh-cn: 文件所属组
    Type: String
    Default: ''
  fileMode:
    Description:
      en: The mode of the file
      zh-cn: 文件权限
    Type: String
    Default: ''
  overwrite:
    Description:
      en: Overwrite the existing file
      zh-cn: 覆盖已存在的文件
    Type: Boolean
    Default: true
Tasks:
  - Name: queryInstanceOSType
    Action: 'ACS::ExecuteApi'
    Description:
      en: Queries ECS instance OS type
      zh-cn: 获取实例操作系统类型
    Properties:
      Service: ECS
      API: DescribeInstances
      Parameters:
        RegionId: '{{ regionId }}'
        InstanceIds:
          - '{{ instanceId }}'
    Outputs:
      OSType:
        Type: String
        ValueSelector: 'Instances.Instance[].OSType'
  - Name: downloadLinuxFile
    When:
      'Fn::Equals':
        - '{{ queryInstanceOSType.OSType }}'
        - linux
    Action: 'ACS::ECS::RunCommand'
    Description:
      en: Execute download file command on linux instance
      zh-cn: 在linux类型实例上执行下载文件命令
    Properties:
      instanceId: '{{ instanceId }}'
      regionId: '{{ regionId }}'
      timeout: '{{ timeout }}'
      commandType: RunShellScript
      commandContent: |-
        #/bin/bash
        
        fileName=$(echo "{{sourcePath}}" | awk -F'?' '{print$1}' | awk -F'/' '{print$NF}')
        destinationFile="{{destinationDir}}/${fileName}"
        
        if [ ! -d "{{destinationDir}}" ]; then
          mkdir -p "{{destinationDir}}"
        fi
        
        if [ '{{ overwrite }}' = 'true' ] || [ ! -f "$destinationFile" ]; then
          if [ '{{sourceType}}' = 'local' ]; then
            wget "{{sourcePath}}" -O "$destinationFile" -q
            echo "$destinationFile execute success."
          else
            acs-plugin-manager --exec -P oosutil --params  download_content,{{sourceType}},'"{{sourcePath}}"',\''{{ tokenInfo }}'\','{{destinationDir}}'
          fi
        else
          echo "File already exists."
          exit 1
        fi
        
        if [ '{{fileMode}}' != '' ] ; then
          chmod '{{fileMode}}' "$destinationFile"
        fi
        
        if [ '{{fileGroup}}' != '' ] ; then
          chgrp {{fileGroup}} "$destinationFile"
        fi
        
        if [ '{{fileOwner}}' != '' ] ; then
          chown {{fileOwner}} "$destinationFile"
        fi
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
  - Name: downloadWindowsFile
    When:
      'Fn::Equals':
        - '{{ queryInstanceOSType.OSType }}'
        - windows
    Action: 'ACS::ECS::RunCommand'
    Description:
      en: Executes download file command on windows instance
      zh-cn: 在windows类型实例上执行下载文件命令
    Properties:
      instanceId: '{{ instanceId }}'
      regionId: '{{ regionId }}'
      timeout: '{{ timeout }}'
      commandType: RunPowerShellScript
      commandContent: |-
        $sourcePath = "{{ sourcePath }}"
        $destinationDir = "{{ destinationDir }}"
        $fileName = ($sourcePath -split '\?')[0] | Split-Path -Leaf
        $destinationFile = Join-Path $destinationDir $fileName
        
        if (-not (Test-Path -Path $destinationDir)) {
          New-Item -ItemType Directory -Path $destinationDir
        }
        
        if ("{{overwrite}}" -eq "true" -or !(Test-Path $destinationFile))
        {
          if ("{{sourceType}}" -eq "local")
          {
            Invoke-WebRequest -Uri $sourcePath -OutFile $destinationFile
            if ($LASTEXITCODE -ne 0){
              exit $LASTEXITCODE;
            }
            Write-Host "$destinationFile execute success."
          }
          else
          {
            acs-plugin-manager.exe --exec -P oosutil_win --params "download_content,{{ sourceType }},$sourcePath,'`{{ tokenInfo }}`',$destinationDir"
            if ($LASTEXITCODE -ne 0){
              exit $LASTEXITCODE;
            }
          }
        }
        else
        {
          Write-Host "File already exists."
          Exit 1
        }
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
Outputs:
  commandOutput:
    Type: String
    Value:
      'Fn::If':
        - 'Fn::Equals':
            - linux
            - '{{ queryInstanceOSType.OSType }}'
        - '{{ downloadLinuxFile.commandOutput }}'
        - '{{ downloadWindowsFile.commandOutput }}'
