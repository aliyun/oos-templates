FormatVersion: OOS-2019-06-01
Description:
  name-en: ACS::ECS::CreateNetworkInterfaceAndEipAndAttachToInstance
  name-zh-cn: 创建弹性网卡与弹性IP并将其绑定到ECS实例上
  en: Create the NetworkInterface and eip and bind the to instance
  zh-cn: 创建弹性网卡和EIP并绑定到ECS实例上
Parameters:
  regionId:
    Description:
      en: The ID of region
      zh-cn: 地域ID
    Type: String
    Default: '{{ ACS::RegionId }}'
  instanceId:
    Description:
      en: The ID of ECS instance
      zh-cn: ECS实例ID
    Type: String
  internetChargeType:
    Description:
      en: EIP measurement method
      zh-cn: EIP的计费方式
    Type: String
    AllowedValues:
      - PayByBandwidth
      - PayByTraffic
    Default: PayByBandwidth
  bandwidth:
    Description:
      en: Peak bandwidth of EIP
      zh-cn: EIP带宽峰值
    Type: Number
    Default: 5
Tasks:
  - Name: checkInstanceReady
    Action: 'ACS::CheckFor'
    Description:
      en: Checks ECS instance is in the Running status
      zh-cn: 检查实例是否处于运行中状态
    Properties:
      Service: ECS
      API: DescribeInstances
      Parameters:
        InstanceIds:
          - '{{ instanceId }}'
      DesiredValues:
        - Running
        - Stopped
      PropertySelector: 'Instances.Instance[].Status'
    Outputs:
      vSwitchId:
        Type: String
        ValueSelector: 'Instances.Instance[].VpcAttributes.VSwitchId'
      SecurityGroupIds:
        Type: List
        ValueSelector: 'Instances.Instance[].SecurityGroupIds.SecurityGroupId[]'
  - Action: 'ACS::ExecuteAPI'
    Name: createNetworkInterface
    Description:
      en: Creates network interface
      zh-cn: 创建弹性网卡
    Properties:
      Service: ECS
      API: CreateNetworkInterface
      Parameters:
        RegionId: '{{ regionId }}'
        VSwitchId: '{{ checkInstanceReady.vSwitchId }}'
        SecurityGroupIds: '{{ checkInstanceReady.SecurityGroupIds }}'
    Outputs:
      networkInterfaceId:
        Type: String
        ValueSelector: .NetworkInterfaceId
  - Name: waitNetworkInterfaceReady
    Action: 'ACS::WaitFor'
    Description:
      en: Waits for the NetworkInterface util Available
      zh-cn: 等待弹性网卡创建到达Available状态
    Delay: 15
    Retries: 7
    DelayType: Constant
    OnError: deleteNetworkInterface
    Properties:
      Service: ECS
      API: DescribeNetworkInterfaces
      Parameters:
        RegionId: '{{ regionId }}'
        NetworkInterfaceId:
          - '{{ createNetworkInterface.networkInterfaceId }}'
      DesiredValues:
        - Available
      PropertySelector: 'NetworkInterfaceSets.NetworkInterfaceSet[].Status'
  - Action: 'ACS::ExecuteAPI'
    Name: attachNetworkInterface
    Description:
      en: Attach the NetworkInterface to ECS instance
      zh-cn: 挂载弹性网卡到ECS实例
    OnError: deleteNetworkInterface
    Properties:
      Service: ECS
      API: AttachNetworkInterface
      Parameters:
        RegionId: '{{ regionId }}'
        NetworkInterfaceId: '{{ createNetworkInterface.networkInterfaceId }}'
        InstanceId: '{{ instanceId }}'
    Outputs:
      networkInterfaceId:
        Type: String
        ValueSelector: .NetworkInterfaceId
  - Name: waitNetworkInterfaceInUse
    Action: 'ACS::WaitFor'
    Description:
      en: Waits for the NetworkInterface util In_use
      zh-cn: 等待弹性网卡到达In_use状态
    Delay: 15
    Retries: 7
    DelayType: Constant
    OnError: deleteNetworkInterface
    Properties:
      Service: ECS
      API: DescribeNetworkInterfaces
      Parameters:
        RegionId: '{{ regionId }}'
        NetworkInterfaceId:
          - '{{ createNetworkInterface.networkInterfaceId }}'
      DesiredValues:
        - InUse
      PropertySelector: 'NetworkInterfaceSets.NetworkInterfaceSet[].Status'
  - Name: allocateEipAddress
    Action: 'ACS::ExecuteAPI'
    Description:
      en: Apply for EIP
      zh-cn: 申请弹性公网IP
    OnError: detachNetworkInterface
    Properties:
      Service: ECS
      API: AllocateEipAddress
      Parameters:
        RegionId: '{{ regionId }}'
        InternetChargeType: '{{ internetChargeType }}'
        Bandwidth: '{{ bandwidth }}'
    Outputs:
      allocationId:
        Type: String
        ValueSelector: .AllocationId
  - Name: waitEipAddressReady
    Action: 'ACS::WaitFor'
    Description:
      en: Waits for the EIP util Available
      zh-cn: 等待EIP到达Available状态
    Delay: 15
    Retries: 7
    DelayType: Constant
    Properties:
      Service: ECS
      API: DescribeEipAddresses
      Parameters:
        AllocationId: '{{ allocateEipAddress.allocationId }}'
      DesiredValues:
        - Available
      PropertySelector: 'EipAddresses.EipAddress[].Status'
  - Name: associateEipAddress
    Action: 'ACS::ExecuteAPI'
    Description:
      en: Binds the eip to instance
      zh-cn: 绑定EIP到实例
    OnError: detachNetworkInterface
    Properties:
      Service: ECS
      API: AssociateEipAddress
      Parameters:
        RegionId: '{{ regionId }}'
        AllocationId: '{{ allocateEipAddress.allocationId }}'
        InstanceId: '{{ createNetworkInterface.networkInterfaceId }}'
        InstanceType: NetworkInterface
  - Name: runCommand
    Action: 'ACS::ECS::RunCommand'
    Description:
      en: Run command
      zh-cn: 执行命令
    OnError: detachNetworkInterface
    OnSuccess: 'ACS::END'
    Properties:
      regionId: '{{ regionId }}'
      commandContent: >-
        wget
        https://oos-public-{{regionId}}.oss-{{regionId}}-internal.aliyuncs.com/x64/multi-nic-util-0.6.tgz

        tar -zxvf multi-nic-util-0.6.tgz

        cd multi-nic-util-0.6

        bash install.sh

        systemctl restart eni.service
      instanceId: '{{instanceId}}'
      commandType: RunShellScript
    Outputs:
      commandOutput:
        Type: String
        ValueSelector: invocationOutput
  - Action: 'ACS::ExecuteAPI'
    Name: detachNetworkInterface
    Description:
      en: Detaches the network interface
      zh-cn: 解绑弹性网卡
    OnError: releaseEipAddress
    Properties:
      Service: ECS
      API: DetachNetworkInterface
      Parameters:
        RegionId: '{{ regionId }}'
        InstanceId: '{{ instanceId }}'
        NetworkInterfaceId: '{{ createNetworkInterface.networkInterfaceId }}'
  - Name: waitNetworkInterfaceAvailable
    Action: 'ACS::WaitFor'
    Description:
      en: Waits for the NetworkInterface util Available
      zh-cn: 等待弹性网卡解绑成功
    Delay: 15
    Retries: 7
    DelayType: Constant
    Properties:
      Service: ECS
      API: DescribeNetworkInterfaces
      Parameters:
        RegionId: '{{ regionId }}'
        NetworkInterfaceId:
          - '{{ createNetworkInterface.networkInterfaceId }}'
      DesiredValues:
        - Available
      PropertySelector: 'NetworkInterfaceSets.NetworkInterfaceSet[].Status'
  - Action: 'ACS::ExecuteAPI'
    Name: deleteNetworkInterface
    Description:
      en: Deletes the network interface
      zh-cn: 删除弹性网卡
    Properties:
      Service: ECS
      API: DeleteNetworkInterface
      Parameters:
        RegionId: '{{ regionId }}'
        NetworkInterfaceId: '{{ createNetworkInterface.networkInterfaceId }}'
  - Action: 'ACS::ExecuteAPI'
    Name: releaseEipAddress
    Description:
      en: Releases the EIP
      zh-cn: 释放EIP。
    OnError: 'ACS::END'
    Properties:
      Service: ECS
      API: ReleaseEipAddress
      Parameters:
        RegionId: '{{ regionId }}'
        AllocationId: '{{ allocateEipAddress.allocationId }}'
Outputs:
  networkInterfaceIdAndAllocationId:
    Type: String
    Value: >-
      {instanceId:{{ instanceId }}, allocationId: {{
      allocateEipAddress.allocationId }}, networkInterfaceId: {{
      createNetworkInterface.networkInterfaceId }}}
